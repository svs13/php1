Исполнитель: Владимир Сидоров.

п.1
    1. Конструктор не требуется. В описании класса св-ву задаём значением по умолчанию.
    2. Имя данных - типа string, Значение данных - любого типа
    3. Значение $template задаёт путь до файла шаблона, тип string.
    4. То же что и п.3, но вывод в поток накапливаем в буффер, а потом очищаем.
Внешние данные обязательно проверяю на валидность простейшими способами, где требуется.

п.2 Использую директорию templates для хранения шаблонов.
Создаю шаблон
получаю/преобразую/передаю данные объекту класса View
Вывожу в поток

для получения значений данных добавляю метод get($name) в объект класса View;

Сущности гостевой книги:
1. Запись гостевой книги
2. Хранилище записей (файл).
3. Услуга добавления записи.
4. Гостевая книга


Сущности галереи:
1. Картина галереи
2. Хранилище картины (файл)
3. Услуга добавления картины(файла) в хранилище.
4. Галерея

Сущности пользователя, его авторизации:
1. Метка пользователя
2. Хранилище меток пользователя (сессия)
3. Услуга авторизации пользователя
4. Хранилище данных авторизации (защищенное место)
5. Пользователь
6. Хранилище данных пользователя (защищенное место)

Сущности логирования:
1. Запись совершенного действия
2. Услуга добавления записи
3. Храниище записей (файл)
4. Сущность "логирование"

Объемная переделка ... по заданию переделывать всё в классы не требуется.

п.3
    1. Сущность новость, её параметры:
        - заголовок
        - краткое содержание новости
        - содержание новости
    действия :
        - получить заголовок
        - получить краткое содержимое
        - получить содержание
    2. Сущность хранилище новостей, её части:
        - список сущностей новость
        - хранилище (файл) новостей
        - услуга добавления новости в хранилище
    действия:
        - получить список новостей
        - добавить новость в список
        - сохранить список новостей

родитель у наследника может быть только 1.

п.4 сделано.
